{
	"name": "gold_df_hechos_detalle_ventas",
	"properties": {
		"folder": {
			"name": "GOLD"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "silver_sql_detalle_ventas",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "gold_sql_dim_detalle_ventas",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [],
			"scriptLines": [
				"source(output(",
				"          sls_ord_num as integer,",
				"          sls_prd_key as string,",
				"          sls_cust_id as integer,",
				"          sls_order_dt as date,",
				"          sls_ship_dt as date,",
				"          sls_sales as integer,",
				"          sls_quantity as integer,",
				"          sls_price as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source1",
				"source1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          sls_ord_num as integer,",
				"          sls_prd_key as string,",
				"          sls_cust_id as integer,",
				"          sls_order_dt as date,",
				"          sls_ship_dt as date,",
				"          sls_sales as integer,",
				"          sls_quantity as integer,",
				"          sls_price as integer",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
			]
		}
	}
}